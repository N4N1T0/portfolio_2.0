---
import { getPosts } from '@/lib/fetchers'
import { Icons } from '@/components/icons/icons'
import { buttonVariants } from '@/components/ui/utils'
import { getLangFromLocale, useTranslations } from '@/i18n/utils'
import { getRelativeLocaleUrl } from 'astro:i18n'

// TYPES
interface Props {
  blogPostId: string
}

// PROPS
const { blogPostId } = Astro.props

// I18N
const lang = getLangFromLocale(Astro.currentLocale)
const t = useTranslations(lang)

// FETCHERS
const blogPosts = await getPosts(lang)
const actualBlogPost = blogPosts.findIndex(
  (blogPost) => blogPost.id === blogPostId
)

// CONSTS
const previous = actualBlogPost > 0 ? blogPosts[actualBlogPost - 1] : null
const next =
  actualBlogPost < blogPosts.length - 1 ? blogPosts[actualBlogPost + 1] : null
---

<nav
  class='flex items-center justify-between px-2 py-3 container border-x border-edge mt-1'
>
  <a
    href={getRelativeLocaleUrl(lang, '/blog')}
    class={buttonVariants({ variant: 'link' })}
  >
    <Icons.arrowLeft />
    {t('blogList').title}
  </a>

  <div class='flex items-center gap-2'>
    {
      previous && (
        <a
          href={getRelativeLocaleUrl(lang, `/blog${previous.id}`)}
          class={buttonVariants({
            variant: 'outline',
            size: 'icon',
            className: 'hover:bg-muted'
          })}
        >
          <Icons.arrowLeft />
          <span class='sr-only'>Previous</span>
        </a>
      )
    }

    {
      next && (
        <a
          href={getRelativeLocaleUrl(lang, `/blog${next.id}`)}
          class={buttonVariants({
            variant: 'outline',
            size: 'icon',
            className: 'hover:bg-muted'
          })}
        >
          <span class='sr-only'>Next</span>
          <Icons.arrowLeft class='rotate-180' />
        </a>
      )
    }
  </div>
</nav>
