---
import { getProjects } from '@/lib/fetchers'
import ProjectItem from './ProjectItem.astro'
import { buttonVariants } from '@/components/ui/utils'
import { Icons } from '@/components/icons/icons'

const projects = await getProjects('es')
---

<section class='section container px-4'>
  <h2 class='text-3xl font-bold font-pixel screen-line-after py-1'>Projects</h2>
  {projects.map((project) => <ProjectItem project={project} />)}
  <div class='screen-line-before flex justify-center py-2'>
    <button id='show-more' class={buttonVariants({ variant: 'default' })}>
      Show More
      <Icons.chevronUp class='rotate-180' id='show-more-icon' />
    </button>
  </div>
</section>

<script>
  import { animate, stagger } from 'animejs'

  const showMore = document.getElementById('show-more') as HTMLButtonElement
  const showMoreIcon = document.getElementById('show-more-icon') as HTMLElement
  const projectItems = document.querySelectorAll('.project-item') // use a class instead of ID

  let isExpanded = false

  const toggleItems = () => {
    const hiddenItems = Array.from(projectItems).slice(3)

    if (!isExpanded) {
      // SHOW more
      hiddenItems.forEach((item) => {
        item.classList.remove('hidden')
      })

      animate(hiddenItems, {
        opacity: [0, 1],
        scale: [0.95, 1],
        easing: 'easeOutExpo',
        duration: 500,
        delay: stagger(100, { start: 0 })
      })

      showMore.textContent = 'Show Less'
      showMoreIcon.classList.remove('rotate-180')
      isExpanded = true
    } else {
      // HIDE again
      animate(hiddenItems, {
        opacity: [1, 0],
        scale: [1, 0.95],
        easing: 'easeInExpo',
        duration: 300,
        delay: stagger(80, { reversed: true }),
        onComplete: () => {
          hiddenItems.forEach((item) => {
            item.classList.add('hidden')
          })
        }
      })

      showMore.textContent = 'Show More'
      showMoreIcon.classList.add('rotate-180')
      isExpanded = false
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    projectItems.forEach((item, index) => {
      if (index > 2) item.classList.add('hidden')
    })
  })

  showMore.addEventListener('click', () => {
    toggleItems()
  })
</script>
